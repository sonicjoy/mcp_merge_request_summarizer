[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "mcp-merge-request-summarizer"
version = "1.0.0"
description = "MCP tool for generating comprehensive merge request summaries from git logs"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Your Name", email = "your.email@example.com"}
]
maintainers = [
    {name = "Your Name", email = "your.email@example.com"}
]
keywords = [
    "mcp",
    "merge-request",
    "git",
    "summary",
    "automation",
    "development-tools"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Tools",
    "Topic :: Software Development :: Version Control :: Git",
    "Topic :: Text Processing :: Markup :: Markdown"
]
requires-python = ">=3.8"
dependencies = [
    "gitpython>=3.1.0",
    "click>=8.0.0",
    "rich>=13.0.0"
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0"
]
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0"
]

[project.urls]
Homepage = "https://github.com/yourusername/mcp-merge-request-summarizer"
Repository = "https://github.com/yourusername/mcp-merge-request-summarizer"
Issues = "https://github.com/yourusername/mcp-merge-request-summarizer/issues"
Documentation = "https://github.com/yourusername/mcp-merge-request-summarizer/wiki"

[project.scripts]
mcp-mr-summarizer = "mcp_mr_summarizer.cli:main"
mcp-mr-summarizer-server = "mcp_mr_summarizer.server:main"

[project.entry-points."console_scripts"]
mcp-mr-summarizer = "mcp_mr_summarizer.cli:main"
mcp-mr-summarizer-server = "mcp_mr_summarizer.server:main"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
mcp_mr_summarizer = ["*.json", "*.yaml", "*.yml"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["mcp_mr_summarizer"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--tb=short"
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests"
]

[tool.coverage.run]
source = ["src/mcp_mr_summarizer"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:"
]
